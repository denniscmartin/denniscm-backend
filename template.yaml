AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API for denniscm.com frontend

Conditions:
  CreateProdResources: !Equals
    - !Ref AWS::AccountId
    - 572540046516 # Dennis account ID (Production)

Globals:
  Function:
    Runtime: python3.7
    Handler: app.lambda_handler
    Architectures:
      - x86_64
    Timeout: 15
    MemorySize: 128
    Tracing: Active
    Layers:
      - !Ref DependenciesLayer

Resources:
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Tracing:
        Enabled: true
      DefinitionUri: statemachine/statemachine.asl.json
      DefinitionSubstitutions:
        ParseReposFunctionArn: !GetAtt ParseReposFunction.Arn
        UploadReposFunctionArn: !GetAtt UploadReposFunction.Arn
      Events:
        StateChange:
          Type: ScheduleV2
          Properties:
            Name: ParseGithubReposSchedule
            Description: Fetch Github repos for denniscm every day at 20:00
            ScheduleExpression: cron(0 20 ? * MON-FRI *)
            State: !If
              - CreateProdResources
              - ENABLED
              - DISABLED
            RetryPolicy:
              MaximumRetryAttempts: 3
    Connectors:
      StateMachineConnector:
        Properties:
          Destination:
            - Id: ParseReposFunction
            - Id: UploadReposFunction
          Permissions:
            - Write

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: dependencies/
      Description: Collection of shared functions and classes
      RetentionPolicy: Delete
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.7

  ParseReposFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: parse_repos/
        Policies:
          - Version: 2012-10-17
            Statement:
                Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !ImportValue DennisCMartinGithubSecretArn

  UploadReposFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: upload_repos/
    Connectors:
      DynamoConnector:
        Properties:
          Destination:
            Id: DynamoTable
          Permissions:
            - Write

  DynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GithubPublicRepos
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: !If
        - CreateProdResources
        - True
        - False
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
